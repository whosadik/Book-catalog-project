import { useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import "../styles/globals.css"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏

export default function LoginPage() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const router = useRouter();

  const handleLogin = async (e) => {
    e.preventDefault();

    try {
      const response = await fetch("http://localhost:5000/api/auth/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email, password }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.message || "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞");
      }

      console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:", data); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç

      // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –∏ —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      localStorage.setItem("token", data.token);
      localStorage.setItem("userId", data.user.id);
      localStorage.setItem("role", data.user.role);

      console.log("üîπ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", {
        token: localStorage.getItem("token"),
        role: localStorage.getItem("role"),
      });

      // ‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º Navbar
      window.dispatchEvent(new Event("storage"));

      // ‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
      router.push("/profile");
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", err.message);
      setError(err.message);
    }
  };

  return (
    <div class="login">
      <h2>–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</h2>
      {error && <p style={{ color: "red" }}>{error}</p>}
      <form onSubmit={handleLogin}>
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button type="submit">–í–æ–π—Ç–∏</button>
      </form>

      <p>
        –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <Link href="/signup">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å</Link>
      </p>
    </div>
  );
}
