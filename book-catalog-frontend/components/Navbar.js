import Link from "next/link";
import { AppBar, Toolbar, Typography, Button } from "@mui/material";
import { useEffect, useState } from "react";
import "../styles/globals.css"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏

export default function Navbar() {
  const [role, setRole] = useState(null);
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  useEffect(() => {
    if (typeof window !== "undefined") {
      const storedRole = localStorage.getItem("role");
      const token = localStorage.getItem("token");
      setRole(storedRole);
      setIsAuthenticated(!!token);
    }
  }, []);
  const goToRandomBook = async () => {
    const res = await fetch("http://localhost:5000/api/books/random");
    const book = await res.json();
    if (book._id) {
      router.push(`/books/${book._id}`);
    } else {
      alert("–ö–Ω–∏–≥ –Ω–µ—Ç –≤ –±–∞–∑–µ");
    }
  };

  return (
    <AppBar position="static">
      <Toolbar>
        <Typography variant="h6" sx={{ flexGrow: 1 }}>
          Book Catalog
        </Typography>

        <Button color="inherit" component={Link} href="/">
          üè† –ì–ª–∞–≤–Ω–∞—è
        </Button>
        <Button color="inherit" component={Link} href="/books">
          üìö –ö–Ω–∏–≥–∏
        </Button>
        <Button color="inherit" component={Link} href="/favorites">
          ‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
        </Button>
        {isAuthenticated && (
          <Button color="inherit" component={Link} href="/profile">
            üë§ –ü—Ä–æ—Ñ–∏–ª—å
          </Button>
        )}
        {/* üî• –ö–Ω–æ–ø–∫–∞ "–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞" */}

        <Button color="inherit" component={Link} href="/random-book">
          üé≤ –°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞
        </Button>

        {/* üîπ –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É" —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞ */}
        {role === "admin" && (
          <>
            <Button color="inherit" component={Link} href="/admin/add-book">
              ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É
            </Button>
            <Button color="inherit" component={Link} href="/admin/stats">
              üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </Button>
          </>
        )}

        {/* üîπ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –í–æ–π—Ç–∏/–í—ã–π—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
        {isAuthenticated ? (
          <Button
            color="inherit"
            onClick={() => {
              localStorage.removeItem("token");
              localStorage.removeItem("userId");
              localStorage.removeItem("role");
              setRole(null);
              setIsAuthenticated(false);
              window.location.reload(); // üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            }}
          >
            üö™ –í—ã–π—Ç–∏
          </Button>
        ) : (
          <Button color="inherit" component={Link} href="/login">
            üîë –í–æ–π—Ç–∏
          </Button>
        )}
      </Toolbar>
    </AppBar>
  );
}
